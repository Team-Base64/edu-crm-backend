// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/attach": {
            "post": {
                "description": "Upload attach",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload attach",
                "operationId": "uploadAttach",
                "parameters": [
                    {
                        "type": "file",
                        "description": "attach",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type: homework or solution or chat",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal Server Error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/calendar": {
            "post": {
                "description": "Creates teacher's calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Creates teacher's calendar",
                "operationId": "CreateCalendar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateCalendarResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/calendar/addevent": {
            "post": {
                "description": "Creates teacher's calendar event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Creates teacher's calendar event",
                "operationId": "CreateCalendarEvent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "description": "Get chats of teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get chats of teacher",
                "operationId": "getChats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ChatPreviewList"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/chats/{chatID}": {
            "get": {
                "description": "Get chats messages by chat id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get chat messages by id",
                "operationId": "getChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat id",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Chat"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes": {
            "get": {
                "description": "Get teacher` + "`" + `s classes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get teacher` + "`" + `s classes",
                "operationId": "getClasses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClassInfoList"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create class",
                "operationId": "createClass",
                "parameters": [
                    {
                        "description": "Class for creating",
                        "name": "class",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClassCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClassInfoResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}": {
            "get": {
                "description": "Get class by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get class by id",
                "operationId": "getClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClassInfoResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/feed": {
            "get": {
                "description": "Get posts from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get class feed",
                "operationId": "getClassFeed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Feed"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create post",
                "operationId": "createPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post for creating",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PostResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/homeworks": {
            "get": {
                "description": "Get homeworks from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get class homeworks",
                "operationId": "getHomeworksFromClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkList"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/solutions": {
            "get": {
                "description": "Get solutions from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get solutions from class",
                "operationId": "getSolutionsFromClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SolutionListFromClass"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/students": {
            "get": {
                "description": "Get students from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get students from class",
                "operationId": "getStudentsFromClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentListFromClass"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/homeworks": {
            "post": {
                "description": "Create homework",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create homework",
                "operationId": "createHomework",
                "parameters": [
                    {
                        "description": "Homework for creating",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/homeworks/{hwID}": {
            "get": {
                "description": "Get homework by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get homework",
                "operationId": "getHomework",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Homework id",
                        "name": "hwID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkByIDResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/homeworks/{hwID}/solutions": {
            "get": {
                "description": "Get solutions for homework by homework id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get solutions for homework",
                "operationId": "getSolutionsForHomework",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Homework id",
                        "name": "hwID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SolutionListForHw"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/oauth": {
            "post": {
                "description": "Sets teacher's OAUTH2Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Sets teacher's OAUTH2Token",
                "operationId": "SetOAUTH2Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/oauth/savetoken": {
            "get": {
                "description": "Saves teacher's OAUTH2Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Saves teacher's OAUTH2Token",
                "operationId": "SaveOAUTH2TokenToFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "gets teacher's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get teacher's info",
                "operationId": "getTeacher",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TeacherProfileResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create teacher",
                "operationId": "createTeacher",
                "parameters": [
                    {
                        "description": "Teacher params",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TeacherSignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/solutions/{solID}": {
            "get": {
                "description": "Get solution by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get solution",
                "operationId": "getSolution",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Solution id",
                        "name": "solID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SolutionByIDResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/students/{studentID}": {
            "get": {
                "description": "Get student by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get student",
                "operationId": "getStudent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "StudentID id",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentByIDResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Chat": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Message"
                    }
                }
            }
        },
        "model.ChatPreview": {
            "type": "object",
            "properties": {
                "chatid": {
                    "type": "integer"
                },
                "cover": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "isread": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "socialType": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.ChatPreviewList": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChatPreview"
                    }
                }
            }
        },
        "model.ClassCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ClassInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inviteToken": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ClassInfoList": {
            "type": "object",
            "properties": {
                "classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ClassInfo"
                    }
                }
            }
        },
        "model.ClassInfoResponse": {
            "type": "object",
            "properties": {
                "class": {
                    "$ref": "#/definitions/model.ClassInfo"
                }
            }
        },
        "model.CreateCalendarResponse": {
            "type": "object",
            "properties": {
                "googleid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "error": {}
            }
        },
        "model.Feed": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Post"
                    }
                }
            }
        },
        "model.Homework": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "deadlineTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HomeworkByID": {
            "type": "object",
            "properties": {
                "classID": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "deadlineTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HomeworkByIDResponse": {
            "type": "object",
            "properties": {
                "homework": {
                    "$ref": "#/definitions/model.HomeworkByID"
                }
            }
        },
        "model.HomeworkCreate": {
            "type": "object",
            "properties": {
                "classID": {
                    "type": "integer"
                },
                "deadlineTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Task"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HomeworkList": {
            "type": "object",
            "properties": {
                "homeworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Homework"
                    }
                }
            }
        },
        "model.HomeworkResponse": {
            "type": "object",
            "properties": {
                "homework": {
                    "$ref": "#/definitions/model.Homework"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "attaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ismine": {
                    "type": "boolean"
                },
                "isread": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.Post": {
            "type": "object",
            "properties": {
                "attaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.PostCreate": {
            "type": "object",
            "properties": {
                "attaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.PostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/model.Post"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "body": {}
            }
        },
        "model.SolutionByID": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "hwID": {
                    "type": "integer"
                },
                "studentID": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SolutionByIDResponse": {
            "type": "object",
            "properties": {
                "solution": {
                    "$ref": "#/definitions/model.SolutionByID"
                }
            }
        },
        "model.SolutionForHw": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "studentID": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SolutionFromClass": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "hwID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "studentID": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SolutionListForHw": {
            "type": "object",
            "properties": {
                "solutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SolutionForHw"
                    }
                }
            }
        },
        "model.SolutionListFromClass": {
            "type": "object",
            "properties": {
                "solutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SolutionFromClass"
                    }
                }
            }
        },
        "model.StudentByID": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "socialType": {
                    "type": "string"
                }
            }
        },
        "model.StudentByIDResponse": {
            "type": "object",
            "properties": {
                "student": {
                    "$ref": "#/definitions/model.StudentByID"
                }
            }
        },
        "model.StudentFromClass": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "socialType": {
                    "type": "string"
                }
            }
        },
        "model.StudentListFromClass": {
            "type": "object",
            "properties": {
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentFromClass"
                    }
                }
            }
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "attach": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.TeacherProfile": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TeacherProfileResponse": {
            "type": "object",
            "properties": {
                "teacher": {
                    "$ref": "#/definitions/model.TeacherProfile"
                }
            }
        },
        "model.TeacherSignUp": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "TCRA API",
	Description:      "TCRA back server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
