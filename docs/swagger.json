{
    "swagger": "2.0",
    "info": {
        "description": "TCRA back server.",
        "title": "TCRA API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/api",
    "paths": {
        "/attach": {
            "post": {
                "description": "Upload attach",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload attach",
                "operationId": "uploadAttach",
                "parameters": [
                    {
                        "type": "file",
                        "description": "attach",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type: homework or solution or chat",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal Server Error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "description": "Check user auth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teacher"
                ],
                "summary": "Check user auth",
                "operationId": "auth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal Server Error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/calendar": {
            "get": {
                "description": "Gets teacher's calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Gets teacher's calendar",
                "operationId": "GetCalendar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CalendarParams"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates teacher's calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Creates teacher's calendar",
                "operationId": "CreateCalendar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CalendarParams"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/calendar/addevent": {
            "post": {
                "description": "Creates teacher's calendar event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Creates teacher's calendar event",
                "operationId": "CreateCalendarEvent",
                "parameters": [
                    {
                        "description": "Event for creating",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CalendarEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/calendar/event": {
            "post": {
                "description": "Update teacher's calendar event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Update teacher's calendar event",
                "operationId": "UpdateCalendarEvent",
                "parameters": [
                    {
                        "description": "Event for updating",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CalendarEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete teacher's calendar event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Delete teacher's calendar event",
                "operationId": "DeleteCalendarEvent",
                "parameters": [
                    {
                        "description": "Event for deleting",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeleteEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/calendar/events": {
            "get": {
                "description": "Get teacher's calendar event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Get teacher's calendar event",
                "operationId": "GetCalendarEvents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CalendarEvent"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "description": "Get chats of teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Get chats of teacher",
                "operationId": "getChats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ChatPreviewList"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/chats/{chatID}": {
            "get": {
                "description": "Get chats messages by chat id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Get chat messages by id",
                "operationId": "getChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat id",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Chat"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Read chats messages by chat id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Read chat messages by id",
                "operationId": "readChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat id",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes": {
            "get": {
                "description": "Get teacher`s classes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Get teacher`s classes",
                "operationId": "getClasses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClassInfoList"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Create class",
                "operationId": "createClass",
                "parameters": [
                    {
                        "description": "Class for creating",
                        "name": "class",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClassCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClassInfoResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}": {
            "get": {
                "description": "Get class by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Get class by id",
                "operationId": "getClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClassInfoResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/feed": {
            "get": {
                "description": "Get posts from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Get class feed",
                "operationId": "getClassFeed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Feed"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feed"
                ],
                "summary": "Create post",
                "operationId": "createPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post for creating",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PostResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/homeworks": {
            "get": {
                "description": "Get homeworks from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Homework"
                ],
                "summary": "Get class homeworks",
                "operationId": "getHomeworksFromClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkList"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/solutions": {
            "get": {
                "description": "Get solutions from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Solution"
                ],
                "summary": "Get solutions from class",
                "operationId": "getSolutionsFromClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SolutionListFromClass"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/classes/{classID}/students": {
            "get": {
                "description": "Get students from class by class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get students from class",
                "operationId": "getStudentsFromClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentListFromClass"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/homeworks": {
            "post": {
                "description": "Create homework",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Homework"
                ],
                "summary": "Create homework",
                "operationId": "createHomework",
                "parameters": [
                    {
                        "description": "Homework for creating",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/homeworks/{homeworkID}": {
            "get": {
                "description": "Get homework by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Homework"
                ],
                "summary": "Get homework",
                "operationId": "getHomework",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Homework id",
                        "name": "homeworkID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HomeworkByIDResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/homeworks/{homeworkID}/solutions": {
            "get": {
                "description": "Get solutions for homework by homework id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Solution"
                ],
                "summary": "Get solutions for homework",
                "operationId": "getSolutionsForHomework",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Homework id",
                        "name": "homeworkID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SolutionListForHw"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Log in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teacher"
                ],
                "summary": "Logs in and returns the authentication  cookie",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Teacher params",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TeacherLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal Server Error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "description": "Logs out user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teacher"
                ],
                "summary": "Logs out user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal Server Error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/oauth": {
            "post": {
                "description": "Sets teacher's OAUTH2Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Sets teacher's OAUTH2Token",
                "operationId": "SetOAUTH2Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/oauth/savetoken": {
            "get": {
                "description": "Saves teacher's OAUTH2Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Saves teacher's OAUTH2Token",
                "operationId": "SaveOAUTH2TokenToFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "gets teacher's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teacher"
                ],
                "summary": "Get teacher's info",
                "operationId": "getTeacher",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TeacherProfileResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Sign Up user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teacher"
                ],
                "summary": "Sign Up and returns the authentication  cookie",
                "operationId": "signup",
                "parameters": [
                    {
                        "description": "Teacher params",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TeacherSignUp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "conflict - UserDB already exists",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal Server Error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "503": {
                        "description": "service unavailable",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/register2": {
            "post": {
                "description": "Create teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teacher"
                ],
                "summary": "Create teacher",
                "operationId": "createTeacher",
                "parameters": [
                    {
                        "description": "Teacher params",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TeacherSignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/solutions/{solID}": {
            "get": {
                "description": "Get solution by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Solution"
                ],
                "summary": "Get solution",
                "operationId": "getSolution",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Solution id",
                        "name": "solID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SolutionByIDResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Add evaluation for solution by solution id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Solution"
                ],
                "summary": "Add evaluation for solution",
                "operationId": "addEvaluationForSolution",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Solution id",
                        "name": "solID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Evaluation for adding",
                        "name": "put",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SolutionEvaluation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/students/{studentID}": {
            "get": {
                "description": "Get student by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get student",
                "operationId": "getStudent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "StudentID id",
                        "name": "studentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentByIDResponse"
                        }
                    },
                    "400": {
                        "description": "bad request - Problem with the request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "not found - Requested entity is not found in database",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "gets teacher's tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get teacher's tasks",
                "operationId": "getTeacherTasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskListByTeacherID"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "create task by teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Create task by teacher",
                "operationId": "createTasks",
                "parameters": [
                    {
                        "description": "Task for creating",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TaskCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskCreateResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/tasks/{taskID}": {
            "get": {
                "description": "get task by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task by ID",
                "operationId": "getTaskByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task id",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaskByIDResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - Access token is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "internal server error - Request is valid but operation failed at server side",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CalendarEvent": {
            "type": "object",
            "properties": {
                "classid": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.CalendarParams": {
            "type": "object",
            "properties": {
                "googleid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.Chat": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Message"
                    }
                }
            }
        },
        "model.ChatPreview": {
            "type": "object",
            "properties": {
                "chatID": {
                    "type": "integer"
                },
                "cover": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "isread": {
                    "type": "boolean"
                },
                "socialType": {
                    "type": "string"
                },
                "studentID": {
                    "type": "integer"
                },
                "studentName": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.ChatPreviewList": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChatPreview"
                    }
                }
            }
        },
        "model.ClassCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ClassInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inviteToken": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ClassInfoList": {
            "type": "object",
            "properties": {
                "classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ClassInfo"
                    }
                }
            }
        },
        "model.ClassInfoResponse": {
            "type": "object",
            "properties": {
                "class": {
                    "$ref": "#/definitions/model.ClassInfo"
                }
            }
        },
        "model.DeleteEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "error": {}
            }
        },
        "model.Feed": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Post"
                    }
                }
            }
        },
        "model.Homework": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "deadlineTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HomeworkByID": {
            "type": "object",
            "properties": {
                "classID": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "deadlineTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HomeworkByIDResponse": {
            "type": "object",
            "properties": {
                "homework": {
                    "$ref": "#/definitions/model.HomeworkByID"
                }
            }
        },
        "model.HomeworkCreate": {
            "type": "object",
            "properties": {
                "classID": {
                    "type": "integer"
                },
                "deadlineTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HomeworkList": {
            "type": "object",
            "properties": {
                "homeworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Homework"
                    }
                }
            }
        },
        "model.HomeworkResponse": {
            "type": "object",
            "properties": {
                "homework": {
                    "$ref": "#/definitions/model.Homework"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "attaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ismine": {
                    "type": "boolean"
                },
                "isread": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.Post": {
            "type": "object",
            "properties": {
                "attaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.PostCreate": {
            "type": "object",
            "properties": {
                "attaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.PostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/model.Post"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "body": {}
            }
        },
        "model.SolutionByID": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hwID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "new | approve | reject",
                    "type": "string"
                },
                "studentID": {
                    "type": "integer"
                },
                "teacherEvaluation": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SolutionByIDResponse": {
            "type": "object",
            "properties": {
                "solution": {
                    "$ref": "#/definitions/model.SolutionByID"
                }
            }
        },
        "model.SolutionEvaluation": {
            "type": "object",
            "properties": {
                "isApproved": {
                    "type": "boolean"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TaskEvaluation"
                    }
                }
            }
        },
        "model.SolutionForHw": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "new | approve | reject",
                    "type": "string"
                },
                "studentID": {
                    "type": "integer"
                },
                "teacherEvaluation": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SolutionFromClass": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hwID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "new | approve | reject",
                    "type": "string"
                },
                "studentID": {
                    "type": "integer"
                },
                "teacherEvaluation": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SolutionListForHw": {
            "type": "object",
            "properties": {
                "solutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SolutionForHw"
                    }
                }
            }
        },
        "model.SolutionListFromClass": {
            "type": "object",
            "properties": {
                "solutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SolutionFromClass"
                    }
                }
            }
        },
        "model.StudentByID": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "socialType": {
                    "type": "string"
                }
            }
        },
        "model.StudentByIDResponse": {
            "type": "object",
            "properties": {
                "student": {
                    "$ref": "#/definitions/model.StudentByID"
                }
            }
        },
        "model.StudentFromClass": {
            "type": "object",
            "properties": {
                "chatID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "socialType": {
                    "type": "string"
                }
            }
        },
        "model.StudentListFromClass": {
            "type": "object",
            "properties": {
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentFromClass"
                    }
                }
            }
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "attach": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.TaskByID": {
            "type": "object",
            "properties": {
                "attach": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.TaskByIDResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/model.TaskByID"
                }
            }
        },
        "model.TaskCreate": {
            "type": "object",
            "properties": {
                "attach": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.TaskCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.TaskEvaluation": {
            "type": "object",
            "properties": {
                "evaluation": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.TaskListByTeacherID": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Task"
                    }
                }
            }
        },
        "model.TeacherLogin": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.TeacherProfile": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TeacherProfileResponse": {
            "type": "object",
            "properties": {
                "teacher": {
                    "$ref": "#/definitions/model.TeacherProfile"
                }
            }
        },
        "model.TeacherSignUp": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}